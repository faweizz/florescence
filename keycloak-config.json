{
  "realm": "TestRealm",
  "accessTokenLifespan": 120,
  "ssoSessionIdleTimeout": 864000,
  "ssoSessionMaxLifespan": 864000,
  "enabled": true,
  "sslRequired": "external",
  "roles": {
    "realm": [],
    "client": {
      "kafka": [
        {
          "name": "uma_protection",
          "clientRole": true
        }
      ]
    }
  },
  "groups" : [],
  "users": [
    {
      "username" : "alice",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "offline_access", "uma_authorization" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "groups" : [ ]
    }, {
      "username" : "bob",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Bob",
      "credentials" : [ ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "offline_access", "uma_authorization" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      }
    },
    { 
      "username" : "service-account-topic-service",
      "enabled" : true,
      "serviceAccountClientId" : "topic-service",
      "clientRoles": {
        "realm-management": [
          "realm-admin",
          "manage-users",
          "manage-authorization",
          "query-realms",
          "create-client",
          "query-groups",
          "query-clients",
          "manage-realm",
          "manage-events",
          "manage-clients",
          "impersonation",
          "manage-identity-providers",
          "query-users"
        ]
      }
    }
  ],
  "clients": [
    {
      "clientId": "topic-service",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "topic-service-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "fullScopeAllowed": true
    },
    {
      "clientId": "postman",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "postman-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "fullScopeAllowed": true
    },
    {
      "clientId": "atlas",
      "rootUrl": "http://localhost:21000",
      "adminUrl": "http://localhost:21000",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:21000/*"
      ],
      "webOrigins": [
        "http://localhost:21000"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect"
    },
    {
      "clientId": "kafka",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "fullScopeAllowed": true,
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [ 
          {
            "name": "Group:topic-service",
            "type": "Group",
            "ownerManagedAccess": false,
            "attributes": {},
            "_id": "0c68911b-cee8-411f-ac42-54993b7b58be",
            "uris": [],
            "scopes": [
              {
                "name": "Read"
              },
              {
                "name": "Describe"
              }
            ]
          },
          {
            "name": "Topic:*",
            "type": "Topic",
            "ownerManagedAccess": false,
            "displayName": "All topics",
            "attributes": {},
            "_id": "9ac393cc-c886-4f28-b2a2-393e1c52b60d",
            "uris": [],
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              },
              {
                "name": "Create"
              },
              {
                "name": "Delete"
              },
              {
                "name": "DescribeConfigs"
              }
            ]
          }
        ],
        "policies": [ 
          {
            "id": "ba1057b3-da16-4927-bf11-fff9976bd6bd",
            "name": "Client topic-service",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"topic-service\"]"
            }
          },
          {
            "id": "fc892bc5-f819-4721-95d6-a52e013cda10",
            "name": "Client topic-service can access all topics",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:*\"]",
              "applyPolicies": "[\"Client topic-service\"]"
            }
          },
          {
            "id": "f93a42d8-c69a-4efe-b059-69bcc30a5535",
            "name": "Client topic-service can access group topic-service",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:topic-service\"]",
              "applyPolicies": "[\"Client topic-service\"]"
            }
          }
        ],
        "scopes": [
          {
            "name": "Create"
          },
          {
            "name": "Read"
          },
          {
            "name": "Write"
          },
          {
            "name": "Delete"
          },
          {
            "name": "Alter"
          },
          {
            "name": "Describe"
          },
          {
            "name": "ClusterAction"
          },
          {
            "name": "DescribeConfigs"
          },
          {
            "name": "AlterConfigs"
          },
          {
            "name": "IdempotentWrite"
          }
        ],
        "decisionStrategy": "AFFIRMATIVE"
      }
    }
  ]
}
