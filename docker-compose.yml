version: '3'
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    expose:
    - "2181"
    ports:
      - "2181:2181"

  kafka:
    restart: always
    container_name: kafka
    hostname: kafka
    build: ./broker
    depends_on:
    - zookeeper
    - keycloak
    ports:
    - "9092:9092"
    expose:
    - "9093"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:SASL_SSL,OUTSIDE:SASL_SSL
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_SASL_ENABLED_MECHANISMS: OAUTHBEARER
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: OAUTHBEARER

      #authentication inside
      KAFKA_LISTENER_NAME_INSIDE_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      KAFKA_LISTENER_NAME_INSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
      KAFKA_LISTENER_NAME_INSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      #authentication outside
      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_JAAS_CONFIG: "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;"
      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
      KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      #authentication
      OAUTH_JWKS_ENDPOINT_URI: http://keycloak:8080/auth/realms/TestRealm/protocol/openid-connect/certs
      KAFKA_PRINCIPAL_BUILDER_CLASS: io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder

      #oauth config
      OAUTH_VALID_ISSUER_URI: http://keycloak:8080/auth/realms/TestRealm
      OAUTH_USERNAME_CLAIM: preferred_username
      OAUTH_CLIENT_ID: kafka
      OAUTH_CLIENT_SECRET: kafka-secret
      OAUTH_TOKEN_ENDPOINT_URI: http://keycloak:8080/auth/realms/TestRealm/protocol/openid-connect/token

      #authentication
      KAFKA_SUPER_USERS: User:service-account-kafka
      KAFKA_AUTHORIZER_CLASS_NAME: io.strimzi.kafka.oauth.server.authorizer.KeycloakRBACAuthorizer
      KAFKA_STRIMZI_AUTHORIZER_DELEGATE_CLASS_NAME: io.strimzi.kafka.oauth.server.authorizer.KeycloakRBACAuthorizer
      KAFKA_STRIMZI_AUTHORIZATION_TOKEN_ENDPOINT_URI: http://keycloak:8080/auth/realms/TestRealm/protocol/openid-connect/token
      KAFKA_STRIMZI_AUTHORIZATION_CLIENT_ID: kafka
      KAFKA_CONNECTIONS_MAX_REAUTH_MS: 3600000

  atlas:
    container_name: atlas
    hostname: atlas
    build: ./atlas
    ports:
      - "21000:21000"

  keycloak:
    restart: always
    container_name: keycloak
    hostname: keycloak
    image: quay.io/keycloak/keycloak:13.0.0
    ports:
      - "8080:8080"
    environment: 
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin

  mongo:
    restart: always
    container_name: mongo
    hostname: mongo
    image: mongo
    ports:
      - "27017:27017"
  
  sharing-service:
    restart: always
    container_name: sharing-service
    hostname: sharing-service
    build: ./sharing-service
    ports:
      - "8081:8081"
    volumes:
      - ./broker/cert/kafka.client.truststore.jks:/home/kafka.client.truststore.jks
